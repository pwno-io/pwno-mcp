[project]
name = "pwno-mcp"
version = "0.1.0"
description = "MCP server for autonomous low-level security research with pwndbg"
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "Pwno Team"},
]
dependencies = [
    "mcp",
    "pygdbmi>=0.11.0.0",
    "psutil>=5.9.0",
    "rich>=14.1.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-timeout>=2.3.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.7.0",
    "mypy>=1.13.0",
    "bandit[toml]>=1.7.8",
    "httpx>=0.27.0",
    "pre-commit>=3.7.0",
    "types-psutil",
]

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "E722",  # do not use bare except (sometimes needed)
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "W291",  # trailing whitespace
    "W293",  # blank line contains whitespace
    "F403",  # star imports (used for format utils)
    "F405",  # names from star imports
    "F841",  # local variable assigned but never used
    "ARG001", # unused function argument (needed for lifespan)
    "SIM108", # use ternary operator (sometimes less readable)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG"]

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
ignore_missing_imports = true
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_unreachable = false
strict_equality = false
check_untyped_defs = false
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=pwnomcp",
    "--cov-report=term-missing",
    "--cov-report=html",
]
python_files = ["test_*.py", "*_test.py"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["pwnomcp"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]

[tool.bandit]
targets = ["pwnomcp"]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]
